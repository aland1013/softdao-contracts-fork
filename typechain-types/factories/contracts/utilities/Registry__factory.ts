/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Registry,
  RegistryInterface,
} from "../../../contracts/utilities/Registry";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "DeployRegistry",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addressRegistered",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "interfaceIds",
        type: "bytes4[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "registeredBy",
        type: "address",
      },
    ],
    name: "Register",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addressUnregistered",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes4[]",
        name: "interfaceIds",
        type: "bytes4[]",
      },
      {
        indexed: false,
        internalType: "address",
        name: "unregisteredBy",
        type: "address",
      },
    ],
    name: "Unregister",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "addAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressRegistered",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "interfaceIds",
        type: "bytes4[]",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "admin",
        type: "address",
      },
    ],
    name: "removeAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "targetSupportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addressUnregistered",
        type: "address",
      },
      {
        internalType: "bytes4[]",
        name: "interfaceIds",
        type: "bytes4[]",
      },
    ],
    name: "unregister",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080806040523461007e5760018054336001600160a01b0319821681179092556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600084a37f23e3485b9b3a753e0fb9855b5da73c634992a2f49a6ae49662aacc620dca4ed6600082a1610ea390816100848239f35b600080fdfe6080604081815260048036101561001557600080fd5b600092833560e01c90816301ffc9a71461073b575080631785f53c14610699578063248a9ca3146106705780632f2ff15d1461061357806336568abe146105835780635c5a269a146104cf5780637048027514610429578063715018a6146103c957806375b238fc146103a05780638da5cb5b1461037757806391d148541461033257806398e84680146102d2578063a217fddf146102b3578063d547741f14610276578063e559e420146101a15763f2fde38b146100d357600080fd5b3461019d57602036600319011261019d576100ec61078f565b6100f4610c38565b6001600160a01b0390811691821561014b575060015492826bffffffffffffffffffffffff60a01b8516176001555192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b608490602085519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b503461019d576101b0366107c0565b926101bc929192610820565b83805b61020a57505083516001600160a01b03909116927f64fa3fc4b9f2176bcce2c8b9156f1dfa1deafdb316a3b0fbe796556c482f2dee9282916102049133919084610deb565b0390a251f35b6001600160a01b0383168752600260209081528688206000198301929091908311610263576001600160e01b031961024b610246858a8a610dc6565b610dd6565b16895252858720805460ff19166001179055806101bf565b634e487b7160e01b895260118452602489fd5b503461019d578160031936011261019d576102b090356102946107aa565b90808552846020526102ab60018587200154610a40565b610bc2565b51f35b5050346102ce57816003193601126102ce5751908152602090f35b5080fd5b5050346102ce57806003193601126102ce576102ec61078f565b6024359063ffffffff60e01b821680920361032e576001600160a01b03168352600260209081528284209184529081529181902054905160ff90911615158152f35b8380fd5b503461019d578160031936011261019d578160209360ff926103526107aa565b903582528186528282206001600160a01b039091168252855220549151911615158152f35b5050346102ce57816003193601126102ce5760015490516001600160a01b039091168152602090f35b5050346102ce57816003193601126102ce5760209051600080516020610e4e8339815191528152f35b5050346102ce57816003193601126102ce576103e3610c38565b600180546001600160a01b0319811690915590519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b5050346102ce5760203660031901126102ce5761044461078f565b61044c610c38565b600080516020610e4e83398151915290818452836020528284209060018060a01b03169081855260205260ff83852054161561048757505051f35b81845283602052828420818552602052828420600160ff1982541617905533917f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d858551a451f35b503461019d576104de366107c0565b926104ea929192610820565b83805b61053257505083516001600160a01b03909116927f0bcb3f274869f37c93d17d9843dbd5c5e0529fb902ae1b91c6a91b2f3178bb749282916102049133919084610deb565b6001600160a01b0383168752600260209081528688206000198301929091908311610263576001600160e01b031961056e610246858a8a610dc6565b16895252858720805460ff19169055806104ed565b503461019d578160031936011261019d5761059c6107aa565b90336001600160a01b038316036105b857906102b09135610bc2565b608490602084519162461bcd60e51b8352820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b6064820152fd5b503461019d578160031936011261019d573561062d6107aa565b8184528360205261064360018486200154610a40565b81845260208481528385206001600160a01b039092168086529190528284205460ff161561048757505051f35b503461019d57602036600319011261019d57816020936001923581528085522001549051908152f35b5050346102ce5760203660031901126102ce576106b461078f565b6106bc610c38565b600080516020610e4e83398151915290818452836020528284209060018060a01b03169081855260205260ff83852054166106f657505051f35b8184528360205282842081855260205282842060ff19815416905533917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b858551a451f35b9250503461019d57602036600319011261019d573563ffffffff60e01b811680910361019d5760209250637965db0b60e01b811490811561077e575b5015158152f35b6301ffc9a760e01b14905038610777565b600435906001600160a01b03821682036107a557565b600080fd5b602435906001600160a01b03821682036107a557565b60406003198201126107a5576004356001600160a01b03811681036107a5579160243567ffffffffffffffff928382116107a557806023830112156107a55781600401359384116107a55760248460051b830101116107a5576024019190565b3360009081527f7d7ffb7a348e1c6a02869081a26547b49160dd3df72d1d75a570eb9b698292ec602090815260408083205490929190600080516020610e4e8339815191529060ff16156108745750505050565b61087d33610cb7565b9084519061088a82610b6e565b60428252838201946060368737825115610a2c5760308653825190600191821015610a2c5790607860218501536041915b8183116109be5750505061097c578461094a604861096e93604497985198899161093b8984019876020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8a52610912815180928d603789019101610b4b565b8401917001034b99036b4b9b9b4b733903937b6329607d1b603784015251809386840190610b4b565b01036028810189520187610ba0565b5194859362461bcd60e51b8552600485015251809281602486015285850190610b4b565b601f01601f19168101030190fd5b60648386519062461bcd60e51b825280600483015260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b909192600f81166010811015610a18576f181899199a1a9b1b9c1cb0b131b232b360811b901a6109ee8587610c90565b5360041c928015610a04576000190191906108bb565b634e487b7160e01b82526011600452602482fd5b634e487b7160e01b83526032600452602483fd5b634e487b7160e01b81526032600452602490fd5b60008181526020818152604092838320338452825260ff848420541615610a675750505050565b610a7033610cb7565b90845190610a7d82610b6e565b60428252838201946060368737825115610a2c5760308653825190600191821015610a2c5790607860218501536041915b818311610b055750505061097c578461094a604861096e93604497985198899161093b8984019876020b1b1b2b9b9a1b7b73a3937b61d1030b1b1b7bab73a1604d1b8a52610912815180928d603789019101610b4b565b909192600f81166010811015610a18576f181899199a1a9b1b9c1cb0b131b232b360811b901a610b358587610c90565b5360041c928015610a0457600019019190610aae565b60005b838110610b5e5750506000910152565b8181015183820152602001610b4e565b6080810190811067ffffffffffffffff821117610b8a57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610b8a57604052565b9060009180835282602052604083209160018060a01b03169182845260205260ff604084205416610bf257505050565b80835282602052604083208284526020526040832060ff1981541690557ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b3393604051a4565b6001546001600160a01b03163303610c4c57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b908151811015610ca1570160200190565b634e487b7160e01b600052603260045260246000fd5b604051906060820182811067ffffffffffffffff821117610b8a57604052602a8252602082016040368237825115610ca157603090538151600190811015610ca157607860218401536029905b808211610d58575050610d145790565b606460405162461bcd60e51b815260206004820152602060248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152fd5b9091600f81166010811015610db1576f181899199a1a9b1b9c1cb0b131b232b360811b901a610d878486610c90565b5360041c918015610d9c576000190190610d04565b60246000634e487b7160e01b81526011600452fd5b60246000634e487b7160e01b81526032600452fd5b9190811015610ca15760051b0190565b356001600160e01b0319811681036107a55790565b60408082528101839052929392916060830190600090815b818110610e1f57505050602091509360018060a01b0316910152565b909192843563ffffffff60e01b8116809103610e4957815260209485019401929190600101610e03565b8480fdfea49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220946c20b4cfc772616c11d37a13e991af21c0263a962b8a410a5333515c75999c64736f6c63430008100033";

type RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registry__factory extends ContractFactory {
  constructor(...args: RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registry> {
    return super.deploy(overrides || {}) as Promise<Registry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Registry {
    return super.attach(address) as Registry;
  }
  override connect(signer: Signer): Registry__factory {
    return super.connect(signer) as Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistryInterface {
    return new utils.Interface(_abi) as RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registry {
    return new Contract(address, _abi, signerOrProvider) as Registry;
  }
}
