/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TrancheVestingMerkle,
  TrancheVestingMerkleInterface,
  TrancheStruct,
} from "../../../contracts/claim/TrancheVestingMerkle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_total",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_voteFactor",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint128",
            name: "time",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "vestedFraction",
            type: "uint128",
          },
        ],
        internalType: "struct Tranche[]",
        name: "_tranches",
        type: "tuple[]",
      },
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
    ],
    name: "Adjust",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Claim",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "InitializeDistributionRecord",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fractionDenominator",
        type: "uint256",
      },
    ],
    name: "InitializeDistributor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "merkleRoot",
        type: "bytes32",
      },
    ],
    name: "SetMerkleRoot",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "SetSweepRecipient",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "SetToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
    ],
    name: "SetTotal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "time",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "VestedFraction",
        type: "uint128",
      },
    ],
    name: "SetTranche",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "SetUri",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "voteFactor",
        type: "uint256",
      },
    ],
    name: "SetVoteFactor",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SweepNative",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "SweepToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
    ],
    name: "adjust",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "totalAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getClaimableAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getDistributionRecord",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "initialized",
            type: "bool",
          },
          {
            internalType: "uint120",
            name: "total",
            type: "uint120",
          },
          {
            internalType: "uint120",
            name: "claimed",
            type: "uint120",
          },
        ],
        internalType: "struct DistributionRecord",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getFractionDenominator",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSweepRecipient",
    outputs: [
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "i",
        type: "uint256",
      },
    ],
    name: "getTranche",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "time",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "vestedFraction",
            type: "uint128",
          },
        ],
        internalType: "struct Tranche",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTranches",
    outputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "time",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "vestedFraction",
            type: "uint128",
          },
        ],
        internalType: "struct Tranche[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "getVestedFraction",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getVoteFactor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "initializeDistributionRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_merkleRoot",
        type: "bytes32",
      },
    ],
    name: "setMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "setSweepRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "setToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_total",
        type: "uint256",
      },
    ],
    name: "setTotal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint128",
            name: "time",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "vestedFraction",
            type: "uint128",
          },
        ],
        internalType: "struct Tranche[]",
        name: "_tranches",
        type: "tuple[]",
      },
    ],
    name: "setTranches",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_uri",
        type: "string",
      },
    ],
    name: "setUri",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_voteFactor",
        type: "uint256",
      },
    ],
    name: "setVoteFactor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sweepNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sweepNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "sweepToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sweepToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523462000cd6576200494e8038038091620000228261016062000d0d565b6101603960c0811262000cd65761016051906001600160a01b038216820362000cd657610180516101a0519092906001600160401b03811162000cd65761016001928261016001601f8501121562000cd65783516001600160401b0381116200060457604051946200009f601f8301601f19166020018762000d0d565b81865284610160016020838301011162000cd65760005b82811062000cdb5750506000908501602001526101c0516101e0519091906001600160401b03811162000cd657610160850161017f8201121562000cd6576101608101516001600160401b0381116200060457604051956200011f60208360051b018862000d0d565b81875260208701926101608201610180600685901b8301011162000cd657610180810193905b610180600685901b820101851062000c7757505050505060a06101600151926200016e62000d46565b6200017862000d46565b90604051620001878162000cf1565b600381526212559560ea1b602082015260405192620001a68462000cf1565b60018452603160f81b60208086019190915260008054336001600160a01b03198216811783556040517fccdd1baf560d2682736fa25752c8ccc0c5fc4079b245b0acf7389776308d5b1f949390926001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09084a3600180546001600160a01b031916339081179091558152a18051906001600160401b038211620006045781906200025b60055462000d81565b601f811162000c21575b50602090601f831160011462000b925760009262000b86575b50508160011b916000199060031b1c1916176005555b8051906001600160401b03821162000604578190620002b560065462000d81565b601f811162000b25575b50602090601f831160011462000aa75760009262000a9b575b50508160011b916000199060031b1c1916176006555b6020815191012090602081519101208160e05280610100524660a052604051916000805160206200492e8339815191526020840152604083015260608201524660808201523060a082015260a081528060c081011060018060401b0360c083011117620006045760c0818101604052815160208301206080523090526000805160206200492e833981519152610120526001600c556001600160a01b0382161562000a535750811562000a0e57600e80546001600160a01b0319166001600160a01b0392909216919091179055600f5583516001600160401b0381116200060457620003dc60115462000d81565b601f8111620009b9575b506020601f8211600114620009495781929394956000926200093d575b50508160011b916000199060031b1c1916176011555b6127106101405260018060a01b03600e5416600f546040519081526060602082015260006011546200044b8162000d81565b908160608501526001811690816000146200090b5750600114620008b4575b5091600080516020620048ce833981519152828060209561271060407f6c339c0bee516a4df5d7074ba7a974856d609f83666e915aa4a0f90e06989dc5999701520390a280601255604051908152a18151156200087b5760138054600082558062000851575b5060009283805b8251821015620006f7576001600160801b0395866020620004f9858762000dbe565b5101511615620006b257868062000511858762000dbe565b515116911610156200066d57858060206200052d858762000dbe565b51015116911610156200061a578462000547828462000dbe565b515116948060206200055a848662000dbe565b51015116916200056b818562000dbe565b519185549268010000000000000000841015620006045760018401808855841015620005ee576001938760005260206000200191815116906020858060801b031991015160801b16179055807f5104929ca78e46ba25dca9557731ec873a03ae745d3ee194d262cc4820662a1c604080518a8152866020820152a20190620004d7565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152602560248201527f7472616e63686520766573746564206672616374696f6e206d75737420696e63604482015264726561736560d81b6064820152608490fd5b60405162461bcd60e51b815260206004820152601a60248201527f7472616e6368652074696d65206d75737420696e6372656173650000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601c60248201527f7472616e63686520766573746564206672616374696f6e203d3d2030000000006044820152606490fd5b84906001600160801b0363f486570081891611620007f95761014051911603620007aa576020817f914960aef5e033ce5cae8a7992d4b7a6f0f9741227b66acb67c605b7019f8a4692601455604051908152a1604051613afa908162000dd4823960805181612e73015260a05181612f3f015260c05181612e3d015260e05181612ec201526101005181612ee801526101205181612e9f0152610140518181816113b3015281816118aa01526123b50152f35b60405162461bcd60e51b815260206004820152602160248201527f6c617374207472616e636865206d757374207665737420616c6c20746f6b656e6044820152607360f81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602a60248201527f76657374696e6720656e6473206166746572203431303234343438303020284a604482015269616e203120323130302960b01b6064820152608490fd5b816000526020600020908101905b8181106200086e5750620004d0565b600081556001016200085f565b60405162461bcd60e51b81526020600482015260116024820152701d1c985b98da195cc81c995c5d5a5c9959607a1b6044820152606490fd5b601160009081529150600080516020620048ee8339815191525b818310620008f35750508101608001600080516020620048ce8339815191526200046a565b805460808486010152602090920191600101620008ce565b60ff191660808086019190915291151560051b84019091019150600080516020620048ce83398151915290506200046a565b01519050388062000403565b601160005260206000209060005b601f1984168110620009a0575060019394959683601f1981161062000986575b505050811b0160115562000419565b015160001960f88460031b161c1916905538808062000977565b9091602060018192858b01518155019301910162000957565b6011600052600080516020620048ee833981519152601f830160051c81016020841062000a06575b601f830160051c82018110620009f9575050620003e6565b60008155600101620009e1565b5080620009e1565b60405162461bcd60e51b815260206004820152601760248201527f4469737472696275746f723a20746f74616c20697320300000000000000000006044820152606490fd5b60c060649162461bcd60e51b82820152602060c4820152602060e48201527f4469737472696275746f723a20746f6b656e206973206164647265737328302961010482015201fd5b015190503880620002d8565b6006600090815293506000805160206200490e83398151915291905b601f198416851062000b09576001945083601f1981161062000aef575b505050811b01600655620002ee565b015160001960f88460031b161c1916905538808062000ae0565b8181015183556020948501946001909301929091019062000ac3565b60066000529091506000805160206200490e833981519152601f840160051c81016020851062000b7e575b90849392915b601f830160051c8201811062000b6e575050620002bf565b6000815585945060010162000b56565b508062000b50565b0151905038806200027e565b6005600090815293507f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db091905b601f198416851062000c05576001945083601f1981161062000beb575b505050811b0160055562000294565b015160001960f88460031b161c1916905538808062000bdc565b8181015183556020948501946001909301929091019062000bbf565b90915060056000526020600020601f840160051c81016020851062000c6f575b90849392915b601f830160051c8201811062000c5f57505062000265565b6000815585945060010162000c47565b508062000c41565b6040858461016001031262000cd657604080519081016001600160401b0381118282101762000604576020936040928592845262000cb58962000d31565b815262000cc4838a0162000d31565b83820152815201950194915062000145565b600080fd5b80602080928401015182828a01015201620000b6565b604081019081106001600160401b038211176200060457604052565b601f909101601f19168101906001600160401b038211908210176200060457604052565b51906001600160801b038216820362000cd657565b6040519062000d558262000cf1565b601582527f496e7465726e616c20766f746520747261636b657200000000000000000000006020830152565b90600182811c9216801562000db3575b602083101462000d9d57565b634e487b7160e01b600052602260045260246000fd5b91607f169162000d91565b8051821015620005ee5760209160051b01019056fe608060408181526004918236101561001657600080fd5b600092833560e01c91826306fdde03146123d857508163095ea7b314610cca5781630f56b96c1461239d578163144fa6d7146122f657816318160ddd146110e85781631be195601461220c5781631f8d1d50146121bf57816323b872dd146120d65781632ddbd13a146120b75781632e7ba6ef14611ea9578163313ce56714611e8d5781633644e51514611e705781633950935114611dfa5781633a46b1a814611d065781633cf3a02514611ca75781634959065714611c88578163587cde1e14611c4d5781635c19a95c14611c29578163684de1f514611bb25781636fcfff4514611b6a57816370a0823114611b32578163715018a614611ad557816375aa9bc61461175b5781637cb647591461170e5781637ecebe00146116d65781638da5cb5b146116ae5781638e539e8c146115de57816395d89b41146115345781639691cab5146111065781639a0e7d66146110e85781639ab24eb0146110605781639b642de114610dfb578163a3f4df7e14610daf578163a457c2d714610ced578163a9059cbb14610cca578163ab803a7614610c66578163b6d8f79f14610c3d578163bb22dccb14610c14578163c3cda52014610a86578163c78d598514610a5d578163c955725514610a10578163d505accf1461084b578163d972e8ad146107ed578163dc2f511b146106fc578163dd62ed3e146106b3578163de032f5814610646578163e12f3a6114610619578163e834a834146105fa578163e85858d914610566578163e90a182f146104f7578163eac989f814610428578163f1127ed814610390578163f2fde38b146102c957508063fc0c546a146102a15763ffa1ad7414610283575b600080fd5b3461029d578160031936011261029d576020905160038152f35b5080fd5b503461029d578160031936011261029d57600e5490516001600160a01b039091168152602090f35b90503461038c57602036600319011261038c576102e46124c9565b6102ec61266b565b6001600160a01b0390811691821561033a575083546001600160a01b0319811683178555925192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b608490602085519162461bcd60e51b8352820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152fd5b8280fd5b8284346104255781600319360112610425576103aa6124c9565b63ffffffff9160243591838316830361029d578185916103ed9493602084516103d28161258f565b82815201526001600160a01b03168152600a6020522061279e565b509060208351926103fd8461258f565b54918216808452602092831c919093019081528351928352516001600160e01b031690820152f35b80fd5b50503461029d578160031936011261029d578051908260115461044a81612631565b808552916001918083169081156104cf5750600114610484575b505050610476826104809403836125c7565b5191829182612480565b0390f35b945060118552600080516020613a658339815191525b8286106104b7575050506104768260206104809582010194610464565b8054602087870181019190915290950194810161049a565b61048097508693506020925061047694915060ff191682840152151560051b82010194610464565b50503461029d578060031936011261029d576105116124c9565b7ff4a44a7f605c4971a27bcecb448108e6328b7fad34fab5bff4f69377294b826d60206024359261054061266b565b6001546001600160a01b03919061055b908690841683613651565b85519485521692a251f35b50503461029d57602036600319011261029d57806060926105856124c9565b818380516105928161255d565b828152826020820152015260018060a01b03168152600d6020522090808051926105bb8461255d565b5460ff8116151593848152602081016001600160781b0380948193828660081c168452019360801c168352845195865251166020850152511690820152f35b50503461029d578160031936011261029d576020906010549051908152f35b50503461029d57602036600319011261029d5760209061063f61063a6124c9565b613826565b9051908152f35b90503461038c57602036600319011261038c57356001600160a01b0381169081900361038c5760207fccdd1baf560d2682736fa25752c8ccc0c5fc4079b245b0acf7389776308d5b1f9161069861266b565b600180546001600160a01b031916821790558351908152a151f35b50503461029d578060031936011261029d57806020926106d16124c9565b6106d96124df565b6001600160a01b0391821683526003865283832091168252845220549051908152f35b8284346104255780600319360112610425579060135461071b816125e9565b92610728835194856125c7565b8184526013815260209384810192827f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090855b8383106107c55750505050835194859481860192828752518093528086019493905b8382106107895786860387f35b9184965082866107b56001949698849851602090816001600160801b0391828151168552015116910152565b019601920186959492939161077c565b60018981926107d9859c99989a9b9c613a00565b81520192019201919097969593949761075a565b90508234610425576020366003190112610425576108279161082191602085516108168161258f565b82815201523561271a565b50613a00565b61084982518092602090816001600160801b0391828151168552015116910152565bf35b8284346104255760e0366003190112610425576108666124c9565b61086e6124df565b9160643560843560ff8116810361038c578142116109cd576001600160a01b03841660009081526007602052604090208054600181019091559286519260208401947f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9865260018060a01b038080981698898b880152166060860152604435608086015260a085015260c084015260c0835260e083019083821067ffffffffffffffff8311176109ba5760648960208a8a8a61094c6109448c8c8c8c885261093f60c4359360a43593519020612f65565b612d85565b919091612c13565b160361097d575162461bcd60e51b81529182015260196024820152600080516020613a858339815191526044820152fd5b5162461bcd60e51b815291820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b815260418952602490fd5b855162461bcd60e51b8152602081890152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b90503461038c57602036600319011261038c5760207f6c339c0bee516a4df5d7074ba7a974856d609f83666e915aa4a0f90e06989dc59135610a5061266b565b806012558351908152a151f35b50503461029d578160031936011261029d5760015490516001600160a01b039091168152602090f35b90503461038c5760c036600319011261038c57610aa16124c9565b9060243560443560643560ff81168103610c1057814211610bcd5785519060208201927fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf845260018060a01b0387168884015284606084015260808301526080825260a0820182811067ffffffffffffffff821117610bba5791610b4395949391610b3b93895261093f60a4359360843593519020612f65565b939093612c13565b6001600160a01b038316600090815260076020526040902080546001810190915503610b77575090610b749161280f565b51f35b606490602085519162461bcd60e51b8352820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152fd5b634e487b7160e01b895260418652602489fd5b855162461bcd60e51b8152602081860152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606490fd5b8680fd5b50503461029d57602036600319011261029d57602090610c326124c9565b506012549051908152f35b50503461029d578060031936011261029d57602090610c5a6124c9565b5061063f6024356139ba565b50503461029d578160031936011261029d577f3b381fdfc0e2729a70e8b26ae2397e9014f703a8235b557f5581c4ed47280fd2602047610cc185808060018060a01b0360015416858951915af1610cbb6137ba565b50613a25565b8351908152a151f35b50503461029d573660031901126104255750610ce46124c9565b5061027e6126c3565b90508234610425578260031936011261042557610d086124c9565b338252600360209081528483206001600160a01b039092168352528290205460243511610d5f576020606492519162461bcd60e51b835282015260196024820152600080516020613a858339815191526044820152fd5b6020608492519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b50503461029d578160031936011261029d57805161048091610dd08261258f565b60148252735472616e63686556657374696e674d65726b6c6560601b60208301525191829182612480565b90503461038c576020908160031936011261105c5780359067ffffffffffffffff90818311611058573660238401121561105857858382013593610e3e85612615565b94610e4b885196876125c7565b808652366024828401011161038c578060248893018388013785010152610e7061266b565b8251918211611045575080601192610e888454612631565b601f8111610feb575b508490601f8311600114610f7c578792610f71575b50508160011b916000199060031b1c19161781555b825191829185918154610ecd81612631565b92600191808316908115610f565750600114610f14575b505050500390209051907fd70c1392a974224e639e7a9607dcb2c766826aecfe2dc356f442ce0488b01e1f8383a2f35b8852919250908690600080516020613a658339815191525b848310610f425750505050810138808080610ee4565b805487840152869550918301918101610f2c565b60ff1916875250505050801515028201905038808080610ee4565b015190503880610ea6565b848852600080516020613a658339815191529250601f198416885b87828210610fd5575050908460019594939210610fbc575b505050811b018155610ebb565b015160001960f88460031b161c19169055388080610faf565b6001859682939686015181550195019301610f97565b909150838752600080516020613a65833981519152601f840160051c81019186851061103b575b90601f859493920160051c01905b81811061102d5750610e91565b888155849350600101611020565b9091508190611012565b634e487b7160e01b865260419052602485fd5b8580fd5b8380fd5b828434610425576020366003190112610425576001600160a01b036110836124c9565b168152600a60205281812054806110ab575060209250905b516001600160e01b039091168152f35b828220600019820192909183116110d5575060209350906110cb9161279e565b5054821c9061109b565b634e487b7160e01b815260118552602490fd5b90503461038c578260031936011261038c5760209250549051908152f35b83833461029d5760208060031936011261038c57833567ffffffffffffffff811161105c573660238201121561105c578085013591611144836125e9565b91611151855193846125c7565b8383528183016024809560061b83010191368311611530578501905b8282106114f45750505061117f61266b565b8151156114bf5760139586548688558061147e575b508580805b8551821015611396576001600160801b039889866111b7858a6139a6565b51015116156113545789806111cc858a6139a6565b51511691161015611312578880866111e4858a6139a6565b51015116911610156112c257876111fb82876139a6565b51511690888561120b83896139a6565b510151169861121a82886139a6565b518b54600160401b8110156112b05760018082018e559392919061123d9061271a565b92909261129f5781519189015160801b6fffffffffffffffffffffffffffffffff1916911617905588518381528087018b905281907f5104929ca78e46ba25dca9557731ec873a03ae745d3ee194d262cc4820662a1c908b90a2019097611199565b634e487b7160e01b87528688528a87fd5b634e487b7160e01b8652604187528986fd5b865162461bcd60e51b81528084018590526025818801527f7472616e63686520766573746564206672616374696f6e206d75737420696e63604482015264726561736560d81b6064820152608490fd5b875162461bcd60e51b8152808501869052601a818901527f7472616e6368652074696d65206d75737420696e6372656173650000000000006044820152606490fd5b885162461bcd60e51b8152808601879052601c818a01527f7472616e63686520766573746564206672616374696f6e203d3d2030000000006044820152606490fd5b92959450509563f48657006001600160801b0380921611611429577f00000000000000000000000000000000000000000000000000000000000000009116036113df5750505051f35b90602191608494519362461bcd60e51b85528401528201527f6c617374207472616e636865206d757374207665737420616c6c20746f6b656e6044820152607360f81b6064820152fd5b855162461bcd60e51b8152808601849052602a818601527f76657374696e6720656e6473206166746572203431303234343438303020284a604482015269616e203120323130302960b01b6064820152608490fd5b8787527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090908101905b8181106114b45750611194565b8781556001016114a7565b8560118460649387519362461bcd60e51b8552840152820152701d1c985b98da195cc81c995c5d5a5c9959607a1b6044820152fd5b868236031261153057838791825161150b8161258f565b61151485612601565b8152611521838601612601565b8382015281520191019061116d565b8780fd5b50503461029d578160031936011261029d578051908260065461155681612631565b808552916001918083169081156104cf575060011461158157505050610476826104809403836125c7565b9450600685527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f5b8286106115c6575050506104768260206104809582010194610464565b805460208787018101919091529095019481016115a9565b828434610425576020366003190112610425578235926115ff4385106127c3565b600b549382905b8582106116565750508361162a57506020925090516001600160e01b039091168152f35b60001984019384116116435750506110cb602092612767565b634e487b7160e01b825260119052602490fd5b909460019061166b818818831c8289166126f7565b918363ffffffff61167b85612767565b505416111561168e575050945b90611606565b90965081018091111561168857634e487b7160e01b845260118352602484fd5b50503461029d578160031936011261029d57905490516001600160a01b039091168152602090f35b50503461029d57602036600319011261029d5760209181906001600160a01b036116fe6124c9565b1681526007845220549051908152f35b90503461038c57602036600319011261038c5760207f914960aef5e033ce5cae8a7992d4b7a6f0f9741227b66acb67c605b7019f8a46913561174e61266b565b806014558351908152a151f35b90503461038c578160031936011261038c576117756124c9565b60249081359061178361266b565b60018060a01b039384821694858852602094600d8652878920928851936117a98561255d565b549160ff83161580158652888601958b6001600160781b038681809860081c168a5260801c16910152611a94578a871315611a6f5786945b83861015611a2d578a8c808a121561199b575050600f5490868210611948578487915116106118ef5785611814916127b6565b600f55888b52600d8852898b209183861684845460081c16039384116118de5750508361189f6118d5958c7fd81661cef4e40e0f1f97384c033d606e4d6b570554fc3524568d8f9fc84c83889a9998966118916118cf976118a89790610100600160801b0382549160081b1690610100600160801b031916179055565b80600e541691541690613651565b601254906134ac565b7f000000000000000000000000000000000000000000000000000000000000000090612f9c565b906134bf565b8451908152a251f35b634e487b7160e01b8c52601190528afd5b8a5162461bcd60e51b81528084018a9052602e818401527f64656372656173652067726561746572207468616e206469737472696275746960448201526d1bdb949958dbdc99081d1bdd185b60921b6064820152608490fd5b508a5162461bcd60e51b81528084018a90526027818401527f64656372656173652067726561746572207468616e206469737472696275746f6044820152661c881d1bdd185b60ca1b6064820152608490fd5b7fd81661cef4e40e0f1f97384c033d606e4d6b570554fc3524568d8f9fc84c83889a999896506118a8945087935061189f9250611a229591611a01916119e6611a289a600f546126f7565b600f558d8152600d8c52209180851690835460081c16613636565b610100600160801b0382549160081b1690610100600160801b031916179055565b90613214565b6118d5565b8a5162461bcd60e51b81528084018a90526018818401527f61646a7573746d656e74203e206d61782075696e7431323000000000000000006044820152606490fd5b600160ff1b8714611a8357868b03946117e1565b634e487b7160e01b8b52601182528afd5b895162461bcd60e51b815291820188905281018790527f6d75737420696e697469616c697a65206265666f72652061646a757374696e676044820152606490fd5b50503461029d578160031936011261029d57611aef61266b565b81546001600160a01b03198116835590519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b50503461029d57602036600319011261029d5760209181906001600160a01b03611b5a6124c9565b1681526002845220549051908152f35b50503461029d57602036600319011261029d5760209163ffffffff90611baa9083906001600160a01b03611b9c6124c9565b168152600a86522054613025565b915191168152f35b50503461029d57610b74611c1e611c24611bcb366124f5565b885160208101958652606085901b6bffffffffffffffffffffffff19166040820152605481018490529296939594909392611c1381607481015b03601f1981018352826125c7565b51902092369161308a565b9061390e565b6130d8565b50503461029d57602036600319011261029d57610b74611c476124c9565b3361280f565b50503461029d57602036600319011261029d576020916001600160a01b0390829082611c776124c9565b168152600985522054169051908152f35b50503461029d578160031936011261029d576020906014549051908152f35b90503461038c57602036600319011261038c5760207f3b381fdfc0e2729a70e8b26ae2397e9014f703a8235b557f5581c4ed47280fd29135611ce761266b565b610cc185808060018060a01b0360015416858951915af1610cbb6137ba565b828434610425578160031936011261042557611d206124c9565b926024803594611d314387106127c3565b6001600160a01b03168352600a60205283832080549590929084905b878210611da257505085611d73575050506020925090516001600160e01b039091168152f35b600019860195929391928611611d92575050506020926110cb9161279e565b634e487b7160e01b825260119052fd5b9096600190611db7818a18831c828b166126f7565b918363ffffffff611dc8858a61279e565b5054161115611ddb575050965b90611d4d565b909850810180911115611dd557634e487b7160e01b8652601183528386fd5b9190503461038c578060031936011261038c57602090611e44606494611e1e6124c9565b338252600385528382206001600160a01b039091168252845282902054602435906126f7565b505162461bcd60e51b81529182015260196024820152600080516020613a858339815191526044820152fd5b50503461029d578160031936011261029d5760209061063f612e3a565b50503461029d578160031936011261029d576020905160128152f35b90503461038c57611c1e611f0291611ec0366124f5565b919692939590885196602097611c1381611c058c8a8d84019687916054939183526bffffffffffffffffffffffff199060601b16602083015260348201520190565b6002600c5414612075576002600c556001600160a01b03818116808852600d85528688205490956001600160781b03919082169060081c8216819003612065575b5080611f4e84613826565b1693841561200a5750928092611ffc92611fcc7f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d49796611f9e858c8e8d8152600d8c522092835460801c16613636565b81546effffffffffffffffffffffffffffff60801b191660809190911b600160801b600160f81b0316179055565b611fd8836010546126f7565b601055611ff3611fed6118a8601254866134ac565b836134bf565b600e5416613651565b8451908152a26001600c5551f35b875162461bcd60e51b8152908101869052602f60248201527f4469737472696275746f723a206e6f206d6f726520746f6b656e7320636c616960448201526e6d61626c65207269676874206e6f7760881b6064820152608490fd5b61206f90846130d8565b38611f43565b5060649184519162461bcd60e51b8352820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b50503461029d578160031936011261029d57602090600f549051908152f35b9190503461038c57606036600319011261038c57806020916064946120f96124c9565b6121016124df565b506001600160a01b0316815260038452818120338252845220546001810161214f57505162461bcd60e51b81529182015260196024820152600080516020613a858339815191526044820152fd5b60443511612182575162461bcd60e51b81529182015260196024820152600080516020613a858339815191526044820152fd5b5162461bcd60e51b815291820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b90503461038c57602036600319011261038c5760207fac657d3615bd618ee537848e2b33acd2a9df67d4776485ab6922b0421d324d2991356121ff61266b565b80600f558351908152a151f35b90503461038c576020908160031936011261105c576122296124c9565b9161223261266b565b83516370a0823160e01b815230928101929092526001600160a01b03838116939092908282602481885afa9182156122ec57879261229d575b50816118d5917ff4a44a7f605c4971a27bcecb448108e6328b7fad34fab5bff4f69377294b826d956001541690613651565b9091508281813d83116122e5575b6122b581836125c7565b81010312610c105751907ff4a44a7f605c4971a27bcecb448108e6328b7fad34fab5bff4f69377294b826d61226b565b503d6122ab565b86513d89823e3d90fd5b9190503461038c57602036600319011261038c576123126124c9565b61231a61266b565b6001600160a01b03169182156123655750600e80546001600160a01b0319168317905551907fefc1fd16ea80a922086ee4e995739d59b025c1bcea6d1f67855747480c83214b8383a2f35b6020606492519162461bcd60e51b83528201526013602482015272746f6b656e206973206164647265737328302960681b6044820152fd5b50503461029d578160031936011261029d57602090517f00000000000000000000000000000000000000000000000000000000000000008152f35b8490843461038c578260031936011261038c57826005546123f881612631565b808552916001918083169081156104cf575060011461242357505050610476826104809403836125c7565b9450600585527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db05b828610612468575050506104768260206104809582010194610464565b8054602087870181019190915290950194810161244b565b6020808252825181830181905290939260005b8281106124b557505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501612493565b600435906001600160a01b038216820361027e57565b602435906001600160a01b038216820361027e57565b608060031982011261027e57600435916024356001600160a01b038116810361027e57916044359160643567ffffffffffffffff9283821161027e578060238301121561027e57816004013593841161027e5760248460051b8301011161027e576024019190565b6060810190811067ffffffffffffffff82111761257957604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff82111761257957604052565b6080810190811067ffffffffffffffff82111761257957604052565b90601f8019910116810190811067ffffffffffffffff82111761257957604052565b67ffffffffffffffff81116125795760051b60200190565b35906001600160801b038216820361027e57565b67ffffffffffffffff811161257957601f01601f191660200190565b90600182811c92168015612661575b602083101461264b57565b634e487b7160e01b600052602260045260246000fd5b91607f1691612640565b6000546001600160a01b0316330361267f57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b5060405162461bcd60e51b81526020600482015260196024820152600080516020613a858339815191526044820152606490fd5b9190820180921161270457565b634e487b7160e01b600052601160045260246000fd5b6013548110156127515760136000527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900190600090565b634e487b7160e01b600052603260045260246000fd5b600b5481101561275157600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db90190600090565b80548210156127515760005260206000200190600090565b9190820391821161270457565b156127ca57565b60405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606490fd5b61288e9160018060a01b0380921691826000526009602052806040600020541690600260205281604060002054946009602052604060002092851692836bffffffffffffffffffffffff60a01b8254161790557f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f6000604051a4612890565b565b6001600160a01b039182169291168083141580612c0a575b6128b157505050565b80612a96575b50816128c1575050565b6000828152600a602052604081208054801592918315612a6257825b6001600160e01b03908116956128f390876126f7565b941580612a28575b15612972575061290a84612fbc565b92600019830192831161295e5750600080516020613aa58339815191529492612939604095936129519361279e565b509063ffffffff82549181199060201b169116179055565b82519182526020820152a2565b634e487b7160e01b81526011600452602490fd5b919061297d43613025565b9061298786612fbc565b92604051916129958361258f565b63ffffffff8094168352856020840195168552600160401b821015612a1457906129c49160018201815561279e565b959095612a00575051915163ffffffff9190921616911660201b63ffffffff1916179055600080516020613aa583398151915291604091612951565b634e487b7160e01b81526004819052602490fd5b634e487b7160e01b87526041600452602487fd5b506000198301838111612a4e57612a4463ffffffff918461279e565b50541643146128fb565b634e487b7160e01b85526011600452602485fd5b6000198201828111612a8257612a78908261279e565b505460201c6128dd565b634e487b7160e01b84526011600452602484fd5b6000818152600a60205260408120805490918115918215612bd55781935b6001600160e01b0394851694612aca88876127b6565b941580612baf575b15612b215750612ae184612fbc565b92600019830192831161295e5750600080516020613aa5833981519152949261293960409593612b109361279e565b82519182526020820152a2386128b7565b9190612b2c43613025565b90612b3686612fbc565b9260405191612b448361258f565b63ffffffff8094168352856020840195168552600160401b821015612a145790612b739160018201815561279e565b959095612a00575051915163ffffffff9190921616911660201b63ffffffff1916179055600080516020613aa583398151915291604091612b10565b506000198301838111612a4e57612bcb63ffffffff918461279e565b5054164314612ad2565b6000198101818111612bf657612beb908561279e565b505460201c93612ab4565b634e487b7160e01b83526011600452602483fd5b508115156128a8565b6005811015612d6f5780612c245750565b60018103612c715760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b60028103612cbe5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b60038103612d165760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b600414612d1f57565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311612e2e5760ff16601b81141580612e23575b612e17579160809493916020936040519384528484015260408301526060820152600093849182805260015afa15612e0a5781516001600160a01b03811615612e04579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600490565b50601c811415612dbd565b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480612f3c575b15612e95577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff8211176125795760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614612e6c565b612f6d612e3a565b9060405190602082019261190160f01b84526022830152604282015260428152612f96816125ab565b51902090565b8115612fa6570490565b634e487b7160e01b600052601260045260246000fd5b6001600160e01b0390818111612fd0571690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fd5b63ffffffff90818111613036571690565b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608490fd5b9291613095826125e9565b916130a360405193846125c7565b829481845260208094019160051b810192831161027e57905b8282106130c95750505050565b813581529083019083016130bc565b6001600160781b038083168181116131ba5761288e93611a22927fdb598eb8e0a3d3d5c2e02e4cab1ee8b65bb20e48fc7b42f4c76272de4cdd243460206118a8946131aa60018060a01b0389169485600052600d84528060406000205460801c1690604051916131478361255d565b60018352858301858152604080850192835260008a8152600d8952209351845491519251600160801b600160f81b0390851660801b166001600160f81b031990921690151560ff1617610100600160801b039390921660081b9290921617179055565b604051908152a2601254906134ac565b60405162461bcd60e51b815260206004820152602c60248201527f4469737472696275746f723a20746f74616c416d6f756e74203e20747970652860448201526b0ead2dce8626460525cdac2f60a31b6064820152608490fd5b6001600160a01b039081169291908315613467576004936132368386546126f7565b85556000928184526132a1816020936002855260409586882061325a8482546126f7565b905581887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef888a51878152a387805260098652808789205416918852868820541690612890565b85546001600160e01b039390841061340c57600b549283159283156133d6576132cd9086885b166126f7565b92158061339e575b156133045750506132e7919250612fbc565b9160001982019182116110d5575061288e92935061293990612767565b90928461331961331343613025565b94612fbc565b9451926133258461258f565b63ffffffff8095168452830194168452600160401b81101561338b578060016133519201600b55612767565b959095613379575051915163ffffffff9190921616911660201b63ffffffff19161790559050565b634e487b7160e01b8152808852602490fd5b634e487b7160e01b865260418852602486fd5b5060001984018481116133c3576133b963ffffffff91612767565b50541643146132d5565b634e487b7160e01b875260118952602487fd5b60001985018581116133f95790866133f06132cd93612767565b5054841c6132c7565b634e487b7160e01b885260118a52602488fd5b5162461bcd60e51b8152808701839052603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608490fd5b60405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606490fd5b8060001904821181151516612704570290565b6001600160a01b03908116929183156135e7576000918483526020600281526040918285205484811061359857613553918580928a895260028652038588205560049861350d838b546127b6565b8a5587817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef878951878152a3875260098452848720548780528588205482169116612890565b600b54918215918215613576576132cd86955b6001600160e01b039687166127b6565b60001984018481116133c35761358e6132cd91612767565b5054821c95613566565b835162461bcd60e51b815260048101849052602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608490fd5b9190916001600160781b038080941691160191821161270457565b60405163a9059cbb60e01b60208083019182526001600160a01b03948516602484015260448084019690965294825292909161368c836125ab565b16916040519161369b8361258f565b8483527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656485840152833b1561377557906136ea9291600094859283809351925af16136e46137ba565b906137ea565b8051806136f8575b50505050565b8184918101031261029d5782015190811591821503610425575061371e578080806136f2565b6084906040519062461bcd60e51b82526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152fd5b60405162461bcd60e51b815260048101869052601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606490fd5b3d156137e5573d906137cb82612615565b916137d960405193846125c7565b82523d6000602084013e565b606090565b909190156137f6575090565b8151156138065750805190602001fd5b60405162461bcd60e51b81529081906138229060048301612480565b0390fd5b6001600160a01b03166000818152600d602052604081205490919060ff16156138be578152600d60205260408120604051906138618261255d565b549060ff8216151581526138a16118a86001600160781b0392836040818760081c1692836020820152019560801c16855261389b426139ba565b906134ac565b915116908082106138b157505090565b6138bb92506127b6565b90565b60405162461bcd60e51b815260206004820152602260248201527f4469737472696275746f723a20636c61696d206e6f7420696e697469616c697a604482015261195960f21b6064820152608490fd5b60145492600092915b82518410156139655761392a84846139a6565b5190600082821015613956575060005260205260406000205b9260001981146127045760010192613917565b90604092825260205220613943565b91509291500361397157565b60405162461bcd60e51b815260206004820152600d60248201526c34b73b30b634b210383937b7b360991b6044820152606490fd5b80518210156127515760209160051b010190565b601354805b6139ca575050600090565b600019016001600160801b036139df8261271a565b50541682116139ee57806139bf565b6139f8915061271a565b505460801c90565b90604051613a0d8161258f565b91546001600160801b038116835260801c6020830152565b15613a2c57565b60405162461bcd60e51b815260206004820152601060248201526f2a3930b739b332b9103330b4b632b21760811b6044820152606490fdfe31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c6864697361626c656420666f7220766f74696e6720706f77657200000000000000dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724a2646970667358221220f9588f434e80a628fbd5a988c6f6a7943a298dd0a039353d25649bd303a9613064736f6c63430008100033433127dedcff849792656a12f4a9dbc0efeb80df5cce6310f53481a93cd71c7131ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c68f652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f";

type TrancheVestingMerkleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TrancheVestingMerkleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TrancheVestingMerkle__factory extends ContractFactory {
  constructor(...args: TrancheVestingMerkleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _total: PromiseOrValue<BigNumberish>,
    _uri: PromiseOrValue<string>,
    _voteFactor: PromiseOrValue<BigNumberish>,
    _tranches: TrancheStruct[],
    _merkleRoot: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TrancheVestingMerkle> {
    return super.deploy(
      _token,
      _total,
      _uri,
      _voteFactor,
      _tranches,
      _merkleRoot,
      overrides || {}
    ) as Promise<TrancheVestingMerkle>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _total: PromiseOrValue<BigNumberish>,
    _uri: PromiseOrValue<string>,
    _voteFactor: PromiseOrValue<BigNumberish>,
    _tranches: TrancheStruct[],
    _merkleRoot: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _token,
      _total,
      _uri,
      _voteFactor,
      _tranches,
      _merkleRoot,
      overrides || {}
    );
  }
  override attach(address: string): TrancheVestingMerkle {
    return super.attach(address) as TrancheVestingMerkle;
  }
  override connect(signer: Signer): TrancheVestingMerkle__factory {
    return super.connect(signer) as TrancheVestingMerkle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TrancheVestingMerkleInterface {
    return new utils.Interface(_abi) as TrancheVestingMerkleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TrancheVestingMerkle {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TrancheVestingMerkle;
  }
}
