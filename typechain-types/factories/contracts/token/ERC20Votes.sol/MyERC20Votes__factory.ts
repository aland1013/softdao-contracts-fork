/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MyERC20Votes,
  MyERC20VotesInterface,
} from "../../../../contracts/token/ERC20Votes.sol/MyERC20Votes";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x61014060408181523462000baa5762002778803803809162000022828662000bcb565b843982019060608383031262000baa5782516001600160401b03939084811162000baa57836200005491830162000bef565b936020938483015182811162000baa5784916200007391850162000bef565b920151835194620000848662000baf565b600192838752818701603160f81b8152885198828a1162000ab757600380549a878c811c9c16801562000b9f575b868d101462000b8957601f9b8c811162000b3e575b5080868d821160011462000ad95760009162000acd575b5060001982841b1c191690881b1781555b87519084821162000ab75760049889548981811c9116801562000aac575b8882101462000a9757839291818f80931162000a31575b5088918411600114620009c657600093620009ba575b505082891b92600019911b1c19161787555b838151910120975190208760e05261010098818a524660a052875191848301907f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9a8b83528a85015260608401524660808401523060a084015260a0835260c083019383851090851117620009a557838952825190206080523060c05261012098895233156200096557505050620001e78260025462000c66565b6002553360005260008152846000206200020383825462000c66565b9055845182815260007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef833393a36000808052600782528581205433825290869020546001600160a01b03908116911681811415806200095b575b62000513575b50506002546001600160e01b03908110620004b75760095493841593600085156200047a57506200029a908360005b1662000c66565b9315806200043c575b156200034457505050620002b79062000cd5565b9160001982019182116200032f575090620002d6620002ee9262000c8a565b509063ffffffff82549181199060201b169116179055565b51906119f8928362000d4084396080518361179a015260a05183611866015260c05183611764015260e051836117e90152518261180f015251816117c60152f35b601190634e487b7160e01b6000525260246000fd5b919363ffffffff989796959893919391824311620003fb57620003679062000cd5565b9284875196620003778862000baf565b844316885287019416845268010000000000000000821015620003e6578101600955620003a49062000c8a565b949094620003d25751915163ffffffff9190921616911660201b63ffffffff191617905591925090620002ee565b600089634e487b7160e01b82525260246000fd5b60418a634e487b7160e01b6000525260246000fd5b865162461bcd60e51b8152808b01879052602660248201526000805160206200273883398151915260448201526532206269747360d01b6064820152608490fd5b50600019850185811162000465576200045a63ffffffff9162000c8a565b5054164314620002a3565b601187634e487b7160e01b6000525260246000fd5b600019870190878211620004a4575090836200049a6200029a9362000c8a565b5054861c62000293565b634e487b7160e01b815260118952602490fd5b855162461bcd60e51b8152808601839052603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b6064820152608490fd5b806200074d575b508062000529575b8062000264565b8060005260088252856000208054908115906000826000146200071457506000925b6001600160e01b039384169362000563888662000c66565b931580620006d5575b15620005d657506200057e8362000cd5565b916000198201918211620005c157600080516020620027588339815191529492620002d68c9593620005b09362000cbc565b825191825285820152a23862000522565b60118a634e487b7160e01b6000525260246000fd5b9063ffffffff8043116200069457620005ef8562000cd5565b918c5194620005fe8662000baf565b8243168652848a870194168452680100000000000000008210156200067f57906200062e918c8201815562000cbc565b9490946200066b5751915163ffffffff9190921616911660201b63ffffffff191617905560008051602062002758833981519152918891620005b0565b60008c634e487b7160e01b82525260246000fd5b60418d634e487b7160e01b6000525260246000fd5b8b5162461bcd60e51b8152808c01899052602660248201526000805160206200273883398151915260448201526532206269747360d01b6064820152608490fd5b506000198201828111620006ff57620006f463ffffffff918562000cbc565b50541643146200056c565b60118b634e487b7160e01b6000525260246000fd5b6000198401908482116200073a57506200072f908262000cbc565b5054851c926200054b565b634e487b7160e01b815260118a52602490fd5b8060005260088352866000208054908115906000826000146200092257506000925b6001600160e01b0393841693888503938585116200090d571580620008e3575b15620007e45750620007a18362000cd5565b916000198201918211620006ff57600080516020620027588339815191529492620002d68d9593620007d39362000cbc565b825191825286820152a2386200051a565b9063ffffffff804311620008a257620007fd8562000cd5565b918d51946200080c8662000baf565b8243168652848b870194168452680100000000000000008210156200088d57906200083c918d8201815562000cbc565b949094620008795751915163ffffffff9190921616911660201b63ffffffff191617905560008051602062002758833981519152918991620007d3565b60008d634e487b7160e01b82525260246000fd5b60418e634e487b7160e01b6000525260246000fd5b8c5162461bcd60e51b8152808d018a9052602660248201526000805160206200273883398151915260448201526532206269747360d01b6064820152608490fd5b5060001982018281116200090d576200090263ffffffff918562000cbc565b50541643146200078f565b60118c634e487b7160e01b6000525260246000fd5b6000198401908482116200094857506200093d908262000cbc565b5054861c926200076f565b634e487b7160e01b815260118b52602490fd5b508315156200025e565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300916101049160649562461bcd60e51b865260c483015260e48201520152fd5b604188634e487b7160e01b6000525260246000fd5b0151915038806200013a565b91908a9450601f198416928c600052896000209360005b8b82821062000a1a5750508511620009ff575b50505050811b0187556200014c565b01519060f884600019921b161c1916905538808080620009f0565b8385015187558e98909601959384019301620009dd565b91509192508a6000528d886000209080860160051c8201928a871062000a8d575b86959492828e929593950160051c01915b82811062000a7357505062000124565b60009193959650809294505501918e918b86959462000a63565b9250819262000a52565b60228b634e487b7160e01b6000525260246000fd5b90607f16906200010d565b634e487b7160e01b600052604160045260246000fd5b905083015138620000de565b899250601f1982169084600052886000209160005b8a82821062000b27575050831162000b0e575b5050811b018155620000ef565b85015160001983861b60f8161c19169055388062000b01565b8389015185558d9690940193928301920162000aee565b82600052866000208d80840160051c82019289851062000b7f575b0160051c019089905b82811062000b72575050620000c7565b6000815501899062000b62565b9250819262000b59565b634e487b7160e01b600052602260045260246000fd5b9b607f169b620000b2565b600080fd5b604081019081106001600160401b0382111762000ab757604052565b601f909101601f19168101906001600160401b0382119082101762000ab757604052565b919080601f8401121562000baa578251906001600160401b03821162000ab7576040519160209162000c2b601f8301601f191684018562000bcb565b81845282828701011162000baa5760005b81811062000c5257508260009394955001015290565b858101830151848201840152820162000c3c565b9190820180921162000c7457565b634e487b7160e01b600052601160045260246000fd5b60095481101562000ca657600960005260206000200190600090565b634e487b7160e01b600052603260045260246000fd5b805482101562000ca65760005260206000200190600090565b6001600160e01b039081811162000cea571690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fdfe60806040908082526004908136101561001757600080fd5b600091823560e01c91826306fdde0314610c1157508163095ea7b314610be757816318160ddd14610bc857816323b872dd14610aff578163313ce56714610ae35781633644e51514610abf5781633950935114610a6f5781633a46b1a81461097b578163587cde1e146109405781635c19a95c1461091c5781636fcfff45146108d457816370a082311461089d5781637ecebe00146108655781638e539e8c1461079557816395d89b41146106925781639ab24eb01461060a578163a457c2d714610565578163a9059cbb14610534578163c3cda520146103a8578163d505accf146101fb57508063dd62ed3e146101b25763f1127ed81461011857600080fd5b346101af57816003193601126101af57610130610d4f565b63ffffffff916024359183831683036101ab5781859161017394936020845161015881610d80565b82815201526001600160a01b031681526008602052206110dd565b5090602083519261018384610d80565b54918216808452602092831c919093019081528351928352516001600160e01b031690820152f35b5080fd5b80fd5b5090346101ab57806003193601126101ab57806020926101d0610d4f565b6101d8610d6a565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b8284346101ab5760e03660031901126101ab57610216610d4f565b9261021f610d6a565b6044359160843560643560ff821682036103a457804211610361576001600160a01b038816600090815260056020526040902080546001810190915591865160208101917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9835260018060a01b0393848c1695868b850152858916606085015289608085015260a084015260c083015260c0825260e0820182811067ffffffffffffffff82111761034e57916102f693916102ee938b526102e960c4359360a4359351902061188c565b6116ac565b91909161153a565b160361030b5750610308929394610f8e565b51f35b606490602085519162461bcd60e51b8352820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152fd5b634e487b7160e01b8b526041875260248bfd5b855162461bcd60e51b8152602081850152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606490fd5b8680fd5b839150346105305760c0366003190112610530576103c4610d4f565b9060243560443560643560ff811681036103a4578142116104ed5785519060208201927fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf845260018060a01b0387168884015284606084015260808301526080825260a0820182811067ffffffffffffffff8211176104da57916104669594939161045e9389526102e960a435936084359351902061188c565b93909361153a565b6001600160a01b03831660009081526005602052604090208054600181019091550361049757509061030891611141565b606490602085519162461bcd60e51b8352820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e6365000000000000006044820152fd5b634e487b7160e01b895260418652602489fd5b855162461bcd60e51b8152602081860152601d60248201527f4552433230566f7465733a207369676e617475726520657870697265640000006044820152606490fd5b8280fd5b8284346101ab57806003193601126101ab5760209061055e610554610d4f565b6024359033610df7565b5160018152f35b919050346101af57826003193601126101af57610580610d4f565b918360243592338152600160205281812060018060a01b03861682526020522054908282106105b95760208561055e8585038733610f8e565b608490602086519162461bcd60e51b8352820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152fd5b8383346101af5760203660031901126101af576001600160a01b0361062d610d4f565b16815260086020528181205480610655575060209250905b516001600160e01b039091168152f35b8282206000198201929091831161067f57506020935090610675916110dd565b5054821c90610645565b634e487b7160e01b815260118552602490fd5b8284346101ab57816003193601126101ab57805191809380549160019083821c9282851694851561078b575b60209586861081146107785785895290811561075457506001146106fc575b6106f887876106ee828c0383610db2565b5191829182610d06565b0390f35b81529295507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061074157505050826106f8946106ee928201019486806106dd565b8054868501880152928601928101610723565b60ff19168887015250505050151560051b83010192506106ee826106f886806106dd565b634e487b7160e01b845260228352602484fd5b93607f16936106be565b8383346101af5760203660031901126101af578235926107b64385106110f5565b6009549382905b85821061080d575050836107e157506020925090516001600160e01b039091168152f35b60001984019384116107fa575050610675602092611090565b634e487b7160e01b825260119052602490fd5b9094600190610822818818831c828916610dd4565b918363ffffffff61083285611090565b5054161115610845575050945b906107bd565b90965081018091111561083f57634e487b7160e01b845260118352602484fd5b8284346101ab5760203660031901126101ab5760209181906001600160a01b0361088d610d4f565b1681526005845220549051908152f35b8284346101ab5760203660031901126101ab5760209181906001600160a01b036108c5610d4f565b16815280845220549051908152f35b8284346101ab5760203660031901126101ab5760209163ffffffff906109149083906001600160a01b03610906610d4f565b16815260088652205461193d565b915191168152f35b8284346101ab5760203660031901126101ab5761030861093a610d4f565b33611141565b8284346101ab5760203660031901126101ab576020916001600160a01b039082908261096a610d4f565b168152600785522054169051908152f35b8383346101af57816003193601126101af57610995610d4f565b9260248035946109a64387106110f5565b6001600160a01b03168352600860205283832080549590929084905b878210610a17575050856109e8575050506020925090516001600160e01b039091168152f35b600019860195929391928611610a0757505050602092610675916110dd565b634e487b7160e01b825260119052fd5b9096600190610a2c818a18831c828b16610dd4565b918363ffffffff610a3d858a6110dd565b5054161115610a50575050965b906109c2565b909850810180911115610a4a57634e487b7160e01b8652601183528386fd5b8284346101ab57806003193601126101ab5761055e602092610ab8610a92610d4f565b338352600186528483206001600160a01b03821684528652918490205460243590610dd4565b9033610f8e565b8284346101ab57816003193601126101ab57602090610adc611761565b9051908152f35b8284346101ab57816003193601126101ab576020905160128152f35b9050346101ab5760603660031901126101ab57610b1a610d4f565b610b22610d6a565b91846044359460018060a01b038416815260016020528181203382526020522054906000198203610b5c575b60208661055e878787610df7565b848210610b855750918391610b7a6020969561055e95033383610f8e565b919394819350610b4e565b606490602087519162461bcd60e51b8352820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152fd5b8284346101ab57816003193601126101ab576020906002549051908152f35b8284346101ab57806003193601126101ab5760209061055e610c07610d4f565b6024359033610f8e565b84849234610d025783600319360112610d0257600354600181811c9186908281168015610cf8575b6020958686108214610ce55750848852908115610cc35750600114610c6a575b6106f886866106ee828b0383610db2565b929550600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610cb057505050826106f8946106ee928201019486610c59565b8054868501880152928601928101610c93565b60ff191687860152505050151560051b83010192506106ee826106f886610c59565b634e487b7160e01b845260229052602483fd5b93607f1693610c39565b8380fd5b6020808252825181830181905290939260005b828110610d3b57505060409293506000838284010152601f8019910116010190565b818101860151848201604001528501610d19565b600435906001600160a01b0382168203610d6557565b600080fd5b602435906001600160a01b0382168203610d6557565b6040810190811067ffffffffffffffff821117610d9c57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117610d9c57604052565b91908201809211610de157565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b039081169392918415610f3b578116908115610eea576000858152806020526040908181205496858810610e975785610e959798828452836020520383832055848252828220610e4f878254610dd4565b905584817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef602086518a8152a381526007602052828282205416938152205416906111b7565b565b825162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608490fd5b60405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608490fd5b60405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608490fd5b6001600160a01b0390811691821561103f5716918215610fef5760207f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925918360005260018252604060002085600052825280604060002055604051908152a3565b60405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608490fd5b60405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b6009548110156110c75760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0190600090565b634e487b7160e01b600052603260045260246000fd5b80548210156110c75760005260206000200190600090565b156110fc57565b60405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e6564006044820152606490fd5b610e959160018060a01b038092166000928184526007602052806040852054168092856020527f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f60408720549660076020526040812094871694856bffffffffffffffffffffffff60a01b825416179055604051a45b6001600160a01b039182169291168083141580611531575b6111d857505050565b806113bd575b50816111e8575050565b6000828152600860205260408120805480159291831561138957825b6001600160e01b039081169561121a9087610dd4565b94158061134f575b156112995750611231846118d4565b92600019830192831161128557506000805160206119a3833981519152949261126060409593611278936110dd565b509063ffffffff82549181199060201b169116179055565b82519182526020820152a2565b634e487b7160e01b81526011600452602490fd5b91906112a44361193d565b906112ae866118d4565b92604051916112bc83610d80565b63ffffffff8094168352856020840195168552600160401b82101561133b57906112eb916001820181556110dd565b959095611327575051915163ffffffff9190921616911660201b63ffffffff19161790556000805160206119a383398151915291604091611278565b634e487b7160e01b81526004819052602490fd5b634e487b7160e01b87526041600452602487fd5b5060001983018381116113755761136b63ffffffff91846110dd565b5054164314611222565b634e487b7160e01b85526011600452602485fd5b60001982018281116113a95761139f90826110dd565b505460201c611204565b634e487b7160e01b84526011600452602484fd5b60008181526008602052604081208054909181159182156114fc5781935b6001600160e01b0394851694878603948686116113755715806114d6575b156114485750611408846118d4565b92600019830192831161128557506000805160206119a3833981519152949261126060409593611437936110dd565b82519182526020820152a2386111de565b91906114534361193d565b9061145d866118d4565b926040519161146b83610d80565b63ffffffff8094168352856020840195168552600160401b82101561133b579061149a916001820181556110dd565b959095611327575051915163ffffffff9190921616911660201b63ffffffff19161790556000805160206119a383398151915291604091611437565b506000198301838111611375576114f263ffffffff91846110dd565b50541643146113f9565b600019810181811161151d5761151290856110dd565b505460201c936113db565b634e487b7160e01b83526011600452602483fd5b508115156111cf565b6005811015611696578061154b5750565b600181036115985760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606490fd5b600281036115e55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606490fd5b6003810361163d5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608490fd5b60041461164657565b60405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608490fd5b634e487b7160e01b600052602160045260246000fd5b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116117555760ff16601b8114158061174a575b61173e579160809493916020936040519384528484015260408301526060820152600093849182805260015afa156117315781516001600160a01b0381161561172b579190565b50600190565b50604051903d90823e3d90fd5b50505050600090600490565b50601c8114156116e4565b50505050600090600390565b307f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161480611863575b156117bc577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f000000000000000000000000000000000000000000000000000000000000000082527f000000000000000000000000000000000000000000000000000000000000000060408201527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260a0815260c0810181811067ffffffffffffffff821117610d9c5760405251902090565b507f00000000000000000000000000000000000000000000000000000000000000004614611793565b611894611761565b9060405190602082019261190160f01b845260228301526042820152604281526080810181811067ffffffffffffffff821117610d9c5760405251902090565b6001600160e01b03908181116118e8571690565b60405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b6064820152608490fd5b63ffffffff9081811161194e571690565b60405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b6064820152608490fdfedec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724a264697066735822122076a7ca10f99b0e53f786a9deefa86427093e81287ae5204713c118df3a53c58264736f6c6343000810003353616665436173743a2076616c756520646f65736e27742066697420696e2033dec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a724";

type MyERC20VotesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MyERC20VotesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MyERC20Votes__factory extends ContractFactory {
  constructor(...args: MyERC20VotesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MyERC20Votes> {
    return super.deploy(
      _name,
      _symbol,
      supply,
      overrides || {}
    ) as Promise<MyERC20Votes>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    supply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, supply, overrides || {});
  }
  override attach(address: string): MyERC20Votes {
    return super.attach(address) as MyERC20Votes;
  }
  override connect(signer: Signer): MyERC20Votes__factory {
    return super.connect(signer) as MyERC20Votes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MyERC20VotesInterface {
    return new utils.Interface(_abi) as MyERC20VotesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MyERC20Votes {
    return new Contract(address, _abi, signerOrProvider) as MyERC20Votes;
  }
}
