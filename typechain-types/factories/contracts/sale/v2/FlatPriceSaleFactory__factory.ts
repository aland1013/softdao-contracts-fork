/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  FlatPriceSaleFactory,
  FlatPriceSaleFactoryInterface,
} from "../../../../contracts/sale/v2/FlatPriceSaleFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract FlatPriceSale",
        name: "clone",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "saleMaximum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userMaximum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseMinimum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxQueueTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "URI",
            type: "string",
          },
        ],
        indexed: false,
        internalType: "struct Config",
        name: "config",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "string",
        name: "baseCurrency",
        type: "string",
      },
      {
        indexed: false,
        internalType: "contract AggregatorV3Interface",
        name: "nativeOracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "nativePaymentsEnabled",
        type: "bool",
      },
    ],
    name: "NewSale",
    type: "event",
  },
  {
    inputs: [],
    name: "VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address payable",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "merkleRoot",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "saleMaximum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "userMaximum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "purchaseMinimum",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxQueueTime",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "URI",
            type: "string",
          },
        ],
        internalType: "struct Config",
        name: "_config",
        type: "tuple",
      },
      {
        internalType: "string",
        name: "_baseCurrency",
        type: "string",
      },
      {
        internalType: "bool",
        name: "_nativePaymentsEnabled",
        type: "bool",
      },
      {
        internalType: "contract AggregatorV3Interface",
        name: "_nativeTokenPriceOracle",
        type: "address",
      },
      {
        internalType: "contract IERC20Upgradeable[]",
        name: "tokens",
        type: "address[]",
      },
      {
        internalType: "contract AggregatorV3Interface[]",
        name: "oracles",
        type: "address[]",
      },
      {
        internalType: "uint8[]",
        name: "decimals",
        type: "uint8[]",
      },
    ],
    name: "newSale",
    outputs: [
      {
        internalType: "contract FlatPriceSale",
        name: "sale",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a03461007857601f61072638819003918201601f19168301916001600160401b0383118484101761007d5780849260209460405283398101031261007857516001600160a01b0381168103610078576080526040516106929081610094823960805181818161021a015281816102e701526105330152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c9081635c60da1b14610520575080635f76426d146100eb5763ffa1ad741461004057600080fd5b346100e65760003660031901126100e6576040516040810181811067ffffffffffffffff8211176100d05760405260038152602090620322e360ec1b82820152604051828193825282519081818401526000935b8285106100b7575050604092506000838284010152601f80199101168101030190f35b8481018201518686016040015293810193859350610094565b634e487b7160e01b600052604160045260246000fd5b600080fd5b346100e6576101003660031901126100e6576004356001600160a01b03811681036100e65767ffffffffffffffff602435116100e657610120602435360360031901126100e65767ffffffffffffffff604435116100e6573660236044350112156100e65767ffffffffffffffff60443560040135116100e657366024604435600401356044350101116100e65760643580151581036100e6576084356001600160a01b03811681036100e65760a43567ffffffffffffffff81116100e6576101b8903690600401610562565b9060c43567ffffffffffffffff81116100e6576101d9903690600401610562565b909167ffffffffffffffff60e435116100e6576101fb3660e435600401610562565b604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81527f000000000000000000000000000000000000000000000000000000000000000060601b60148201526e5af43d82803e903d91602b57fd5bf360881b602882015291969095916001600160a01b03906037906000f0169788156104e25788604051608081527f8cbdcd452e06fb30ddd0c122823be8f8622979a6c7acad4f6cc6501e200dd4976102cd6102b3608084016024356004016105b4565b838103602085015260443560040135602460443501610593565b6001600160a01b03868116604085015285151560608501527f000000000000000000000000000000000000000000000000000000000000000016929081900390a3883b156100e65760209060409a989796959493929a519a8b9963334d684960e11b8b5260018060a01b031660048b015261010060248b015261037a61035c6101048c016024356004016105b4565b6003198c82030160448d015260443560040135602460443501610593565b91151560648b01526001600160a01b031660848a01528881036003190160a48a01528281520191906000905b8082106104a1575050508581036003190160c487015281815260200191906000905b808210610466575050508381036003190160e485015281815260200191906000905b80821061043b575050509080600092038183855af1801561042f57610415575b602090604051908152f35b67ffffffffffffffff82116100d05760209160405261040a565b6040513d6000823e3d90fd5b91809450929092359060ff82168092036100e6576020816001938293520194019201859392916103ea565b94955092939092918335906001600160a01b03821682036100e65760208091600193848060a01b0316815201940192018795949392916103c8565b9697509495939492939092918335906001600160a01b03821682036100e65760208091600193848060a01b03168152019401920189979695949392916103a6565b60405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606490fd5b346100e65760003660031901126100e6577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b9181601f840112156100e65782359167ffffffffffffffff83116100e6576020808501948460051b0101116100e657565b908060209392818452848401376000828201840152601f01601f1916010190565b80356001600160a01b038116908190036100e65782526020810135602083015260408101356040830152606081013560608301526080810135608083015260a081013560a083015260c081013560c083015260e081013560e08301526101009081810135601e19823603018112156100e657016020813591019167ffffffffffffffff82116100e65781360383136100e6576106599361012080928201520191610593565b9056fea2646970667358221220a6936075a84b2467668542c4648c1b12ea36bec703e562087717092121afd32764736f6c63430008100033";

type FlatPriceSaleFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FlatPriceSaleFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FlatPriceSaleFactory__factory extends ContractFactory {
  constructor(...args: FlatPriceSaleFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _implementation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<FlatPriceSaleFactory> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<FlatPriceSaleFactory>;
  }
  override getDeployTransaction(
    _implementation: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  override attach(address: string): FlatPriceSaleFactory {
    return super.attach(address) as FlatPriceSaleFactory;
  }
  override connect(signer: Signer): FlatPriceSaleFactory__factory {
    return super.connect(signer) as FlatPriceSaleFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlatPriceSaleFactoryInterface {
    return new utils.Interface(_abi) as FlatPriceSaleFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlatPriceSaleFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as FlatPriceSaleFactory;
  }
}
